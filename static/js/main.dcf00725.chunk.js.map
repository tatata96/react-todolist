{"version":3,"sources":["components/Form.js","components/ToDo.js","components/ToDoList.js","components/ThemeSwitch.js","components/LoadBar.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","onChange","e","target","value","type","className","onClick","preventDefault","text","completed","id","Math","random","name","ToDo","todo","map","el","filter","ToDoList","filteredTodos","setPercentage","percentage","console","log","length","ThemeSwitch","setTheme","theme","document","documentElement","setAttribute","toUpperCase","LoadBar","toFixed","App","useEffect","getLocalStorage","useState","status","setFilteredTodos","filterHandler","saveLocalStorage","updateLoadBar","getElementById","style","width","localStorage","setItem","JSON","stringify","getItem","parse","percentageLocal","Number","todoLocal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.dcf00725.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Form = ({ inputText, setInputText, todos, setTodos, setStatus }) => {\r\n\r\n    const inputTextHandler = (e) => {\r\n\r\n        setInputText(e.target.value);\r\n\r\n    };\r\n\r\n    const submitTodoHandler = (e) => {\r\n        //to prevent refreshing page\r\n        e.preventDefault();\r\n        //...todos -> spread seyntax to keep the previous state in tact and merge correctly , NOT OVERWRITE\r\n\r\n        setTodos([\r\n            ...todos, { text: inputText, completed: false, id: Math.random() * 1000 }\r\n        ]);\r\n\r\n        //set state backto 0, after adding item to list\r\n        setInputText(\"\");\r\n    }\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value);\r\n\r\n    }\r\n    return (\r\n        <form>\r\n            <input onChange={inputTextHandler} value={inputText} type=\"text\" className=\"todo-input\" />\r\n            <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\n\r\n\r\nconst ToDo = ({ text, todos, setTodos, todo }) => {\r\n\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id))\r\n    }\r\n    const completeHandler = () => {\r\n        setTodos(todos.map((el) => {\r\n            if (el.id === todo.id) {\r\n                return {\r\n                    ...el, completed: !el.completed//leave evryy other property as it is and ONLY moidify completed\r\n                    //merging correctly without overwriting\r\n                };\r\n            }\r\n            return el;\r\n\r\n        }))\r\n    }\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? 'completed' : ''}`}>{text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\"><i className=\"fas fa-check\"></i></button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\" ><i className=\"fas fa-trash\"></i></button>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default ToDo;","import React from 'react';\r\nimport ToDo from './ToDo'\r\n\r\nconst ToDoList = ({ todos, setTodos, filteredTodos, percentage, setPercentage }) => {\r\n    console.log(todos);\r\n    setPercentage(((todos.filter(todo => todo.completed === true).length) / (todos.length)) * 100);\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {\r\n                    filteredTodos.map(todo => (\r\n                        <ToDo\r\n                            todo={todo}\r\n                            setTodos={setTodos}\r\n                            todos={todos}\r\n                            key={todo.id} text={todo.text} />\r\n                    ))\r\n                }\r\n\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDoList;","import React from 'react';\r\n\r\n\r\nconst ThemeSwitch = ({ setTheme, theme }) => {\r\n    const themeHandler = () => {\r\n\r\n        if (theme === \"light\") {\r\n            setTheme(\"dark\")\r\n\r\n        } else {\r\n            setTheme(\"light\")\r\n\r\n        }\r\n        document.documentElement.setAttribute('data-theme', theme)\r\n\r\n    };\r\n    return (\r\n        <button className=\"theme-btn\" type=\"button\" onClick={themeHandler}>\r\n            {(theme === \"light\" ? <div className=\"theme-wrapper\"><i className=\"fas fa-sun theme-icon\"></i><span className=\"theme-text\">{theme.toUpperCase()}</span></div> : <div className=\"theme-wrapper\"><i className=\"fas fa-moon theme-icon\"></i><span className=\"theme-text\">{theme.toUpperCase()}</span></div>)}\r\n        </button>\r\n    );\r\n}\r\nexport default ThemeSwitch;","import React from 'react';\r\n\r\n\r\nconst LoadBar = ({ percentage }) => {\r\n\r\n    return (\r\n        <div id=\"loadBar\">\r\n            <div className=\"percent\" id=\"percent\">{percentage.toFixed(0)}%</div>\r\n            <div className=\"loader-wrapper\">\r\n                <div className=\"loader\" id=\"loader\"></div>\r\n                <div></div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default LoadBar;","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport ToDoList from \"./components/ToDoList\";\nimport ThemeSwitch from \"./components/ThemeSwitch\";\nimport LoadBar from \"./components/LoadBar\";\n\n\n\nfunction App() {\n\n  useEffect(() => {\n    getLocalStorage();//İLK ÇALIŞACAK, BİR KERE\n  }, []);\n\n\n  //initlizing states\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  const [theme, setTheme] = useState(\"dark\");\n  const [percentage, setPercentage] = useState(0);\n\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalStorage();\n  }, [todos, status, theme, percentage]);\n\n\n  useEffect(() => {\n    updateLoadBar();\n\n  }, [percentage]);\n\n  const updateLoadBar = () => {\n\n    document.getElementById(\"loader\").style.width = percentage + \"%\";\n  }\n  //functions and events\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n\n\n  const saveLocalStorage = () => {//İKİNCİ \n    localStorage.setItem('todos', JSON.stringify(todos));\n    localStorage.setItem('theme', JSON.stringify(theme));\n    console.log(\"saveLocalStorage-app: \" + theme)\n\n\n  }\n  const getLocalStorage = () => {///İLK \n\n    ///////////////////////THEME\n\n    if (localStorage.getItem('theme') === null) {\n      document.documentElement.setAttribute('data-theme', \"light\");\n      localStorage.setItem('theme', \"light\");\n\n\n    } else {\n\n      setTheme(JSON.parse(localStorage.getItem('theme')));\n      document.documentElement.setAttribute('data-theme', theme);\n\n    }\n\n    ///////////////////////PROGRESS\n\n    if (localStorage.getItem('percentage') === null) {\n      //  setPercentage(Number(10));\n      localStorage.setItem('percentage', percentage);\n\n\n    } else {\n      let percentageLocal = Number(JSON.parse(localStorage.getItem('percentage')));\n      setPercentage(percentageLocal);\n\n      document.getElementById(\"loader\").style.width = percentageLocal + \"%\";\n\n    }\n\n    ///////////////////////LIST\n\n\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem('todos'));\n      setTodos(todoLocal);\n    }\n\n  }\n\n  document.documentElement.setAttribute('data-theme', theme);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>To-Do List</h1>\n      </header>\n      <LoadBar percentage={percentage} />\n\n      <Form todos={todos} setTodos={setTodos} inputText={inputText} setInputText={setInputText} setStatus={setStatus} />\n      <ToDoList percentage={percentage} setPercentage={setPercentage} filteredTodos={filteredTodos} setTodos={setTodos} todos={todos} />\n      <ThemeSwitch setTheme={setTheme} theme={theme} />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}